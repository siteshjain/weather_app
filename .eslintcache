[{"C:\\Users\\lenovo\\Desktop\\web develop\\new weather\\tempapp\\tempreact\\src\\index.js":"1","C:\\Users\\lenovo\\Desktop\\web develop\\new weather\\tempapp\\tempreact\\src\\App.js":"2","C:\\Users\\lenovo\\Desktop\\web develop\\new weather\\tempapp\\tempreact\\src\\component\\Tempapp.js":"3"},{"size":200,"mtime":1609767469054,"results":"4","hashOfConfig":"5"},{"size":174,"mtime":1609767424570,"results":"6","hashOfConfig":"5"},{"size":2819,"mtime":1615830412750,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"5mki8h",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"C:\\Users\\lenovo\\Desktop\\web develop\\new weather\\tempapp\\tempreact\\src\\index.js",[],["16","17"],"C:\\Users\\lenovo\\Desktop\\web develop\\new weather\\tempapp\\tempreact\\src\\App.js",[],"C:\\Users\\lenovo\\Desktop\\web develop\\new weather\\tempapp\\tempreact\\src\\component\\Tempapp.js",["18","19","20","21"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport \"./css/style.css\"\r\n\r\nconst Tempapp=()=>{\r\n   \r\n    \r\n    const [full,setFull]=useState(\"\")\r\n    const [city,setCity]=useState(\"\") \r\n    const [wet,setWeather]=useState(\"\") \r\n   const [unit,setUnit]=useState(\"\");\r\n   const [set,set1]=useState(\"false\");\r\n    const [search,setSearch]=useState(\"Kota\");\r\n\r\n\r\n \r\n\r\n   \r\n  \r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        async function getData(){\r\n           \r\n            console.log(unit);\r\n                const res=await axios.get(`http://api.openweathermap.org/data/2.5/weather?q=${search}&units=metric&appid=cb96fe2a2e57a80e13066c0ad73b8769`)\r\n                console.log(res);\r\n                setFull(res);\r\n                setCity(res.data.main);\r\n                setWeather(res.data.weather[0]);\r\n\r\n            \r\n           \r\n            \r\n            \r\n            \r\n        }\r\n        getData();\r\n        setFull(\"\");\r\n       \r\n    },[search],[unit])\r\n    \r\n   \r\n\r\n    const dateBuilder=(d)=>{\r\n        var months=[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"June\",\"Jul\",\"Aug\",\"Sept\",\"Oct\",\"Nov\",\"Dec\"];\r\n        let days=[\"Sun\",\"Mon\",\"Tues\",\"Wed\",\"Thurs\",\"Fri\",\"Sat\"]\r\n\r\n        let day=days[d.getDay()]\r\n        let date=d.getDate();\r\n        let month=months[d.getMonth()]\r\n        let year=d.getFullYear();\r\n\r\n        return `${day} ${date} ${month} ${year}`\r\n    }\r\n\r\n    \r\n   \r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        <div className=\"box\">\r\n        <div className=\"heading\">\r\n            <h1>Weather App</h1>\r\n        </div>\r\n            <div className=\"inputData\">\r\n                <input type=\"search\" className=\"inputField\" placeholder=\"Search...\" value={search} onChange={(e)=>{setSearch(e.target.value)}} ></input>\r\n            </div>\r\n           <div className=\"conver\">\r\n         \r\n           </div>\r\n\r\n            {\r\n                (!full.data )?(<p className=\"error\">No Data Found</p>):(\r\n                    <>\r\n                    <div className=\"icon\">\r\n                    <img src={`./assests/${wet.icon}.png`} alt=\"icon\"/>\r\n                    </div>\r\n                    <div className=\"info\">\r\n                 <h2 className=\"location\"><i className=\"fas fa-street-view\">{search}</i></h2>\r\n                <div className=\"date\">{dateBuilder(new Date())}</div>\r\n                 <h1 className=\"temp\">{city.temp}&deg;C\r\n\r\n            </h1>\r\n            <h3 className=\"tempmin-max\">Min:{city.temp_min}&deg;C | Max:{city.temp_max}&deg;C</h3>\r\n            <p className=\"description\">{wet.description}</p>\r\n            \r\n            </div>\r\n\r\n        <div className=\"wave\"></div>\r\n        <div className=\"two\"></div>\r\n        <div className=\"three\"></div>\r\n        </>\r\n                )\r\n            }\r\n        \r\n   </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Tempapp ;",{"ruleId":"22","replacedBy":"23"},{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","severity":1,"message":"27","line":12,"column":16,"nodeType":"28","messageId":"29","endLine":12,"endColumn":23},{"ruleId":"26","severity":1,"message":"30","line":13,"column":11,"nodeType":"28","messageId":"29","endLine":13,"endColumn":14},{"ruleId":"26","severity":1,"message":"31","line":13,"column":15,"nodeType":"28","messageId":"29","endLine":13,"endColumn":19},{"ruleId":"32","severity":1,"message":"33","line":43,"column":7,"nodeType":"34","endLine":43,"endColumn":15,"suggestions":"35"},"no-native-reassign",["36"],"no-negated-in-lhs",["37"],"no-unused-vars","'setUnit' is assigned a value but never used.","Identifier","unusedVar","'set' is assigned a value but never used.","'set1' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'unit'. Either include it or remove the dependency array.","ArrayExpression",["38"],"no-global-assign","no-unsafe-negation",{"desc":"39","fix":"40"},"Update the dependencies array to be: [search, unit]",{"range":"41","text":"42"},[969,977],"[search, unit]"]