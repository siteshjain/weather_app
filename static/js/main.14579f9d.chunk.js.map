{"version":3,"sources":["component/Tempapp.js","App.js","index.js"],"names":["Tempapp","useState","full","setFull","city","setCity","wet","setWeather","unit","search","setSearch","useEffect","a","console","log","axios","get","res","data","main","weather","getData","className","type","placeholder","value","onChange","e","target","src","icon","alt","d","day","getDay","date","getDate","month","getMonth","year","getFullYear","dateBuilder","Date","temp","temp_min","temp_max","description","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NA4GeA,G,MAvGD,WAAK,IAAD,EAGOC,mBAAS,IAHhB,mBAGPC,EAHO,KAGFC,EAHE,OAIOF,mBAAS,IAJhB,mBAIPG,EAJO,KAIFC,EAJE,OAKSJ,mBAAS,IALlB,mBAKPK,EALO,KAKHC,EALG,OAMMN,mBAAS,IANf,mBAMRO,EANQ,aAOEP,mBAAS,UAPX,gCAQWA,mBAAS,SARpB,mBAQPQ,EARO,KAQAC,EARA,KAkBdC,qBAAU,WAAI,4CACV,4BAAAC,EAAA,6DAEIC,QAAQC,IAAIN,GAFhB,SAGwBO,IAAMC,IAAN,2DAA8DP,EAA9D,yDAHxB,OAGcQ,EAHd,OAIQJ,QAAQC,IAAIG,GACZd,EAAQc,GACRZ,EAAQY,EAAIC,KAAKC,MACjBZ,EAAWU,EAAIC,KAAKE,QAAQ,IAPpC,4CADU,uBAAC,WAAD,wBAgBVC,GACAlB,EAAQ,MAEV,CAACM,GAAQ,CAACD,IAsBZ,OACI,mCACA,sBAAKc,UAAU,MAAf,UACA,qBAAKA,UAAU,UAAf,SACI,+CAEA,qBAAKA,UAAU,YAAf,SACI,uBAAOC,KAAK,SAASD,UAAU,aAAaE,YAAY,YAAYC,MAAOhB,EAAQiB,SAAU,SAACC,GAAKjB,EAAUiB,EAAEC,OAAOH,YAE3H,qBAAKH,UAAU,WAKRpB,EAAKgB,KACH,qCACA,qBAAKI,UAAU,OAAf,SACA,qBAAKO,IAAG,oBAAevB,EAAIwB,KAAnB,QAA+BC,IAAI,WAE3C,sBAAKT,UAAU,OAAf,UACH,oBAAIA,UAAU,WAAd,SAAyB,mBAAGA,UAAU,qBAAb,SAAmCb,MAC7D,qBAAKa,UAAU,OAAf,SAvCM,SAACU,GACf,IAGIC,EAFK,CAAC,MAAM,MAAM,OAAO,MAAM,QAAQ,MAAM,OAEpCD,EAAEE,UACXC,EAAKH,EAAEI,UACPC,EALO,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,MAAM,MAAM,OAK/DL,EAAEM,YACfC,EAAKP,EAAEQ,cAEX,MAAM,GAAN,OAAUP,EAAV,YAAiBE,EAAjB,YAAyBE,EAAzB,YAAkCE,GA8BHE,CAAY,IAAIC,QACtC,qBAAIpB,UAAU,OAAd,UAAsBlB,EAAKuC,KAA3B,WAGL,qBAAIrB,UAAU,cAAd,iBAAiClB,EAAKwC,SAAtC,eAA6DxC,EAAKyC,SAAlE,WACA,mBAAGvB,UAAU,cAAb,SAA4BhB,EAAIwC,iBAIpC,qBAAKxB,UAAU,SACf,qBAAKA,UAAU,QACf,qBAAKA,UAAU,aAlBQ,mBAAGA,UAAU,QAAb,kCCjEhByB,MARf,WACE,OACE,8BACE,cAAC,EAAD,OCFNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.14579f9d.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport \"./css/style.css\"\r\n\r\nconst Tempapp=()=>{\r\n   \r\n    \r\n    const [full,setFull]=useState(\"\")\r\n    const [city,setCity]=useState(\"\") \r\n    const [wet,setWeather]=useState(\"\") \r\n   const [unit,setUnit]=useState(\"\");\r\n   const [set,set1]=useState(\"false\");\r\n    const [search,setSearch]=useState(\"Kota\");\r\n\r\n\r\n \r\n\r\n   \r\n  \r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        async function getData(){\r\n           \r\n            console.log(unit);\r\n                const res=await axios.get(`http://api.openweathermap.org/data/2.5/weather?q=${search}&units=metric&appid=cb96fe2a2e57a80e13066c0ad73b8769`)\r\n                console.log(res);\r\n                setFull(res);\r\n                setCity(res.data.main);\r\n                setWeather(res.data.weather[0]);\r\n\r\n            \r\n           \r\n            \r\n            \r\n            \r\n        }\r\n        getData();\r\n        setFull(\"\");\r\n       \r\n    },[search],[unit])\r\n    \r\n   \r\n\r\n    const dateBuilder=(d)=>{\r\n        var months=[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"June\",\"Jul\",\"Aug\",\"Sept\",\"Oct\",\"Nov\",\"Dec\"];\r\n        let days=[\"Sun\",\"Mon\",\"Tues\",\"Wed\",\"Thurs\",\"Fri\",\"Sat\"]\r\n\r\n        let day=days[d.getDay()]\r\n        let date=d.getDate();\r\n        let month=months[d.getMonth()]\r\n        let year=d.getFullYear();\r\n\r\n        return `${day} ${date} ${month} ${year}`\r\n    }\r\n\r\n    \r\n   \r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        <div className=\"box\">\r\n        <div className=\"heading\">\r\n            <h1>Weather App</h1>\r\n        </div>\r\n            <div className=\"inputData\">\r\n                <input type=\"search\" className=\"inputField\" placeholder=\"Search...\" value={search} onChange={(e)=>{setSearch(e.target.value)}} ></input>\r\n            </div>\r\n           <div className=\"conver\">\r\n         \r\n           </div>\r\n\r\n            {\r\n                (!full.data )?(<p className=\"error\">No Data Found</p>):(\r\n                    <>\r\n                    <div className=\"icon\">\r\n                    <img src={`./assests/${wet.icon}.png`} alt=\"icon\"/>\r\n                    </div>\r\n                    <div className=\"info\">\r\n                 <h2 className=\"location\"><i className=\"fas fa-street-view\">{search}</i></h2>\r\n                <div className=\"date\">{dateBuilder(new Date())}</div>\r\n                 <h1 className=\"temp\">{city.temp}&deg;C\r\n\r\n            </h1>\r\n            <h3 className=\"tempmin-max\">Min:{city.temp_min}&deg;C | Max:{city.temp_max}&deg;C</h3>\r\n            <p className=\"description\">{wet.description}</p>\r\n            \r\n            </div>\r\n\r\n        <div className=\"wave\"></div>\r\n        <div className=\"two\"></div>\r\n        <div className=\"three\"></div>\r\n        </>\r\n                )\r\n            }\r\n        \r\n   </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Tempapp ;","import React from 'react'\n\nimport Tempapp from './component/Tempapp'\n\n\nfunction App() {\n  return (\n    <div>\n      <Tempapp></Tempapp>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}